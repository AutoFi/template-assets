  - kind: argoproj.io/v1alpha1/rollouts
    selector:
      query: .metadata.namespace | startswith("kube") | not 
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-Rollout-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            title: .metadata.name
            blueprint: '"workload"'
            properties:
              kind: '"Rollout"'
              creationTimestamp: .metadata.creationTimestamp         
              replicas: .spec.replicas
              strategyConfig: .spec.strategy // null
              availableReplicas: .status.availableReplicas
              hasPrivileged: .spec.template.spec.containers | [.[].securityContext.privileged] | any
              labels: .metadata.labels
              hasLatest: .spec.template.spec.containers[].image | contains(":latest")
              hasLimits: .spec.template.spec.containers | all(has("resources") and (.resources.limits.memory and .resources.limits.cpu))
              containers: (.spec.template.spec.containers | map({name, image, resources}))
              isHealthy: if .spec.replicas == .status.availableReplicas then "Healthy" else "Unhealthy" end
            relations:
              Namespace: .metadata.namespace + "-" + "{CLUSTER_NAME}"

  - kind: argoproj.io/v1alpha1/applications
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            blueprint: '"argocdApp"'
            title: .metadata.name
            properties:
              status: .status.health.status
              syncStatus: .status.sync.status
              syncPolicy: .spec.syncPolicy // null
              gitRepo: .spec.source.repoURL
              gitPath: .spec.source.path
              gitRev: .status.sync.revision // null
            relations:
              workload: .spec.destination.namespace as $namespace | .status.resources | map(select(.kind == "Deployment" or .kind == "StatefuleSet" or .kind == "DaemonSet" or .kind == "Rollout" )) | .[] | .name + "-" + .kind + "-" + $namespace + "-{CLUSTER_NAME}"
              argocdProject: .spec.project + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
              destinationNamespace: .spec.destination.namespace + "-" + "{CLUSTER_NAME}"

  - kind: argoproj.io/v1alpha1/appproject
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            title: .metadata.name
            blueprint: '"argocdProject"'
            properties:
            relations:
              Namespace: .metadata.namespace + "-" + "{CLUSTER_NAME}"

  - kind: v1/secrets
    selector:
      query: '.metadata.labels // {} | contains({ "argocd.argoproj.io/secret-type": "repository" })'
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            title: .metadata.name
            blueprint: '"argoRepo"'
            properties:
              repoUrl: .data.url | @base64d
              repoType: .data.type | @base64d
            relations:
              Namespace: .metadata.namespace + "-" + "{CLUSTER_NAME}"

 