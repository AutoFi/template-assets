  - kind: serving.knative.dev/v1/service
    selector:
      query: .metadata.name | startswith("kube") | not
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            title: .metadata.name
            blueprint: '"knativeService"'
            properties:
              creationTimestamp: .metadata.creationTimestamp
              labels: .metadata.labels
              containerConcurrency: .spec.template.spec.containerConcurrency
              containers: .spec.template.spec.containers
              trafficConfiguration: .status.traffic
              serviceTimeout: .spec.template.spec.timeoutSeconds
              url: .status.url
              ready: .status.conditions[] | select(.type == "Ready") | .status
              generation: .metadata.generation
            relations:
              namespace: .metadata.namespace + "-" + "{CLUSTER_NAME}"

  - kind: serving.knative.dev/v1/configuration
    selector:
      query: .metadata.name | startswith("kube") | not
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            title: .metadata.name
            blueprint: '"knativeConfiguration"'
            properties:
              creationTimestamp: .metadata.creationTimestamp
              labels: .metadata.labels
              ready: .status.conditions[] | select(.type == "Ready") | .status
              containers: .spec.template.spec.containers
            relations:
              knativeService: .metadata.ownerReferences[0].name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"

  - kind: serving.knative.dev/v1/revision
    selector:
      query: .metadata.name | startswith("kube") | not
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            title: .metadata.name
            blueprint: '"knativeRevision"'
            properties:
              creationTimestamp: .metadata.creationTimestamp
              labels: .metadata.labels
              isActive: .status.conditions[] | select(.type == "Active") | .status
              containers: .spec.containers
              replicaCount: .status.actualReplicas
            relations:
              knativeConfiguration: .metadata.ownerReferences[0].name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
  
  - kind: serving.knative.dev/v1/route
    selector:
      query: .metadata.name | startswith("kube") | not
    port:
      entity:
        mappings:
          - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"
            title: .metadata.name
            blueprint: '"knativeRoute"'
            properties:
              creationTimestamp: .metadata.creationTimestamp
              labels: .metadata.labels
              trafficConfiguration: .status.traffic
              url: .status.url
            relations:
              knativeRevision: '[.status.traffic[].revisionName + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"]'
              knativeService: .metadata.ownerReferences[0].name + "-" + .metadata.namespace + "-" + "{CLUSTER_NAME}"