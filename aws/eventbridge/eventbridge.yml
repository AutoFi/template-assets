AWSTemplateFormatVersion: "2010-09-09"
Description: The template used to create event rules for the Port AWS exporter.

Parameters:
  PortAWSExporterStackName:
    Description: Name of the Port AWS exporter stack name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: serverlessrepo-port-aws-exporter

Resources:
  EventRule0:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: default
      EventPattern:
        source:
        - aws.lambda
        detail-type:
        - AWS API Call via CloudTrail
        detail:
          eventSource:
          - lambda.amazonaws.com
          eventName:
          - prefix: UpdateFunctionConfiguration
          - prefix: CreateFunction
          - prefix: DeleteFunction
      Name: port-aws-exporter-sync-lambda-trails
      State: ENABLED
      Targets:
      - Id: "PortAWSExporterEventsQueue"
        Arn: {"Fn::ImportValue": {"Fn::Sub": "${PortAWSExporterStackName}-EventsQueueARN"}}
        InputTransformer:
          InputPathsMap:
            awsRegion: $.detail.awsRegion
            eventName: $.detail.eventName
            requestFunctionName: $.detail.requestParameters.functionName
            responseFunctionName: $.detail.responseElements.functionName
          InputTemplate: |-
            {
              "resource_type": "AWS::Lambda::Function",
              "requestFunctionName": "<requestFunctionName>",
              "responseFunctionName": "<responseFunctionName>",
              "eventName": "<eventName>",
              "region": "\"<awsRegion>\"",
              "identifier": "if .responseFunctionName != \"\" then .responseFunctionName else .requestFunctionName end",
              "action": "if .eventName | startswith(\"Delete\") then \"delete\" else \"upsert\" end"
            }
