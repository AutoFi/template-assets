EC2InstanceTagsEventRule:
  Type: AWS::Events::Rule
  Properties:
    EventBusName: default
    EventPattern:
      source:
        - aws.ec2
      detail-type:
        - AWS API Call via CloudTrail
      detail:
        eventSource:
          - ec2.amazonaws.com
        eventName:
          - prefix: DeleteTags
          - prefix: CreateTags
    Name: port-aws-exporter-sync-ec2-trails
    State: ENABLED
    Targets:
      - Id: PortAWSExporterEventsQueue
        Arn:
          Fn::ImportValue:
            Fn::Sub: ${PortAWSExporterStackName}-EventsQueueARN
        InputTransformer:
          InputPathsMap:
            awsRegion: $.detail.awsRegion
            eventName: $.detail.eventName
            requestInstanceId: $.detail.requestParameters.resourcesSet.items[0].resourceId
          InputTemplate: |-
            {
              "resource_type": "AWS::EC2::Instance",
              "region": "\"<awsRegion>\"",
              "identifier": "\"<requestInstanceId>\"",
              "action": "\"upsert\""
            }
EC2InstanceStateChangeEventRule:
  Type: AWS::Events::Rule
  Properties:
    EventBusName: default
    EventPattern:
      detail-type:
        - EC2 Instance State-change Notification
      source:
        - aws.ec2
    Name: port-aws-exporter-sync-ec2-instance-status-change-trails
    State: ENABLED
    Targets:
      - Id: PortAWSExporterEventsQueue
        Arn:
          Fn::ImportValue:
            Fn::Sub: ${PortAWSExporterStackName}-EventsQueueARN
        InputTransformer:
          InputPathsMap:
            region: $.region
            instanceId: $.detail.instance-id
            status: $.detail.state
          InputTemplate: |-
            {
                "resource_type": "AWS::EC2::Instance",
                "region": "\"<region>\"",
                "identifier": "\"<instanceId>\"",
                "action": "if \"<status>\" == \"terminated\" then \"delete\" else \"upsert\" end"
            }