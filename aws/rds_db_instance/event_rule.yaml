RdsInstanceEventRule:
  Type: AWS::Events::Rule
  Properties:
    EventBusName: default
    EventPattern:
      source:
        - aws.rds
      detail-type:
        - AWS API Call via CloudTrail
      detail:
        eventSource:
          - rds.amazonaws.com
        eventName:
          - prefix: CreateDBInstance
          - prefix: CreateDBInstanceReadReplica
          - prefix: RestoreDBInstanceFromDBSnapshot
          - prefix: RestoreDBInstanceFromS3
          - prefix: RestoreDBInstanceToPointInTime
          - prefix: ModifyDBInstance
          - prefix: AddTagsToResource
          - prefix: RemoveTagsFromResource
          - prefix: DeleteDBInstance
    Name: port-aws-exporter-sync-rds-trails
    State: ENABLED
    Targets:
      - Id: PortAWSExporterEventsQueue
        Arn:
          Fn::ImportValue:
            Fn::Sub: ${PortAWSExporterStackName}-EventsQueueARN
        InputTransformer:
          InputPathsMap:
            awsRegion: $.detail.awsRegion
            eventName: $.detail.eventName
            requestDBInstanceIdentifier: $.detail.requestParameters.dBInstanceIdentifier
            requestResourceName: $.detail.requestParameters.resourceName
            requestTargetDBInstanceIdentifier: $.detail.requestParameters.targetDBInstanceIdentifier
          InputTemplate: |-
            {
              "resource_type": "AWS::RDS::DBInstance",
              "region": "\"<awsRegion>\"",
              "identifier": "if \"<requestTargetDBInstanceIdentifier>\" != \"\" then \"<requestTargetDBInstanceIdentifier>\" elif \"<requestDBInstanceIdentifier>\" != \"\" then \"<requestDBInstanceIdentifier>\" else \"<requestResourceName>\" | split(\":\")[-1] end",
              "action": "if \"<eventName>\" | test(\"DeleteDBInstance[^a-zA-Z]*$\") then \"delete\" else \"upsert\" end"
            }